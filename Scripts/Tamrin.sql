SELECT 
	DATEPART(YEAR,OrderDate ),
	COUNT(*)
FROM FactInternetSales
GROUP BY DATEPART(YEAR,OrderDate )
ORDER BY DATEPART(YEAR,OrderDate )
GO


--اضافه كردن فايل گروه به تعداد مورد نياز به بانك اطلاعاتي
ALTER DATABASE AdventureWorksDW2017 ADD FILEGROUP FG2010
ALTER DATABASE AdventureWorksDW2017 ADD FILEGROUP FG2011
ALTER DATABASE AdventureWorksDW2017 ADD FILEGROUP FG2012
ALTER DATABASE AdventureWorksDW2017 ADD FILEGROUP FG2013
ALTER DATABASE AdventureWorksDW2017 ADD FILEGROUP FG2014
ALTER DATABASE AdventureWorksDW2017 ADD FILEGROUP FG2015
GO
ALTER DATABASE AdventureWorksDW2017
	ADD FILE (NAME=Data2010,FILENAME='C:\TEMP\DataFG2010.ndf') TO FILEGROUP FG2010
GO
ALTER DATABASE AdventureWorksDW2017
	ADD FILE (NAME=Data2011,FILENAME='C:\TEMP\DataFG2011.ndf') TO FILEGROUP FG2011
GO
ALTER DATABASE AdventureWorksDW2017
	ADD FILE (NAME=Data2012,FILENAME='C:\TEMP\DataFG2012.ndf') TO FILEGROUP FG2012
GO
ALTER DATABASE AdventureWorksDW2017
	ADD FILE (NAME=Data2013,FILENAME='C:\TEMP\DataFG2013.ndf') TO FILEGROUP FG2013
GO
ALTER DATABASE AdventureWorksDW2017
	ADD FILE (NAME=Data2014,FILENAME='C:\TEMP\DataFG2014.ndf') TO FILEGROUP FG2014
GO
ALTER DATABASE AdventureWorksDW2017
	ADD FILE (NAME=Data2015,FILENAME='C:\TEMP\DataFG2015.ndf') TO FILEGROUP FG2015
GO
-------------
SP_HELPFILEGROUP

CREATE PARTITION FUNCTION PF1 (DATETIME)
AS RANGE RIGHT
FOR VALUES('20110101 00:00:00:000','20120101 00:00:00:000',
		   '20130101 00:00:00:000','20140101 00:00:00:000',
		   '20150101 00:00:00:000'
		  )


CREATE PARTITION SCHEME PS1 AS PARTITION PF1
	TO (FG2010,FG2011,FG2012,FG2013,FG2014,FG2015)
GO	

DROP TABLE IF EXISTS FactInternetSales2
DROP TABLE IF EXISTS FactInternetSales3

SELECT * INTO FactInternetSales2 FROM FactInternetSales

ALTER TABLE FactInternetSales2 ADD FactInternetSaleKey INT IDENTITY(1,1)

SELECT * FROM FactInternetSales2 

ALTER TABLE FactInternetSales2 ADD CONSTRAINT PK_FactInternetSaleKey PRIMARY KEY NONCLUSTERED(FactInternetSaleKey) 

SP_HELPINDEX FactInternetSales2

CREATE UNIQUE CLUSTERED INDEX IX_Clusterd ON FactInternetSales2(OrderDate,FactInternetSaleKey)
ON PS1(OrderDate)

SELECT * FROM SYS.dm_db_index_physical_stats(DB_ID(),OBJECT_ID('FactInternetSales2'),1,NULL,'Detailed')


ALTER TABLE FactInternetSales2 SET (LOCK_ESCALATION=AUTO)
GO
SET STATISTICS IO ON
--Query1
SELECT 
	* 
FROM FactInternetSales2
WHERE OrderDate BETWEEN '2013-06-01' AND '2013-06-30'
GO
--Query2
SELECT 
	* 
FROM FactInternetSales
WHERE OrderDate BETWEEN '2013-06-01' AND '2013-06-30'
GO


/*
P1 : 1752-01-01   TO 2010-12-31
P2 : 2011-01-01 TO 2011-12-31
....
....
*/


SELECT 
	$PARTITION.PF1(ORDERDATE) AS [Partition Number]
	, MIN(ORDERDATE) AS [Min ORDERDATE]
	, MAX(ORDERDATE) AS [Max ORDERDATE]
	, COUNT(ORDERDATE) AS [Rows In Partition]
FROM FactInternetSales2
GROUP BY 
	$PARTITION.PF1(ORDERDATE)
ORDER BY 
	[Partition Number]
GO
ALTER PARTITION FUNCTION pfR() MERGE RANGE(200)
GO
-----------------

ALTER PARTITION FUNCTION PF1() MERGE RANGE('2012')
GO

SELECT 
	$PARTITION.PF1(ORDERDATE) AS [Partition Number]
	, MIN(ORDERDATE) AS [Min ORDERDATE]
	, MAX(ORDERDATE) AS [Max ORDERDATE]
	, COUNT(ORDERDATE) AS [Rows In Partition]
FROM FactInternetSales2
GROUP BY 
	$PARTITION.PF1(ORDERDATE)
ORDER BY 